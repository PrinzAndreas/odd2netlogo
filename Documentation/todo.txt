TODO list for development of ODD2Netlogo
- complete correct codeGen MARG: informal model text, synthetic, plot excluded students
- create code for behavioural space
- fill netlogo info
- define function parameters as entities (not types), sort parameters of functions
- data handling in experiments and runs
- data collection time should be per experiment
- remove "of partner 1" for actions
- make the whole experiments optional and the data collection mandatory
- create behaviour for attributes to select kinds of attributes (network and agent)
- remove DataCollect and use AttributeReference instead?
- better editor display for increment, decrement, set
- editor input for attribute access of other
- do not allow attribute of other for actions
- disallow changing names outside the definition
- make partner in Interaction an EntityReference
- remove center on patch and do it auto after move
- wolf sheep scheduling - correct code gen ref Library
- generate agent condition at call, not at proc. call is correct if parent applicable to same
- better structure for read and write other and network
- init: add init concept -> init -> experiment
- endcondition, move to simulation / experiment
- move init entity state -> entity state (editor)
- fix code Wolf Sheep, Voting, Fire, FireAgents, Segregation cf. Library
- why is occupied an interaction in segregation? fix it.
- improve appearance of MARG
- check all concepts with TODO
- should sliders be expressions?
- remove arrays? - not needed (move to future use)
- remove styling hintIfNull?
- styling hint versus comment? should they be selectable?
- make good stylings for sections and user input and definitions and hints and comments
- recheck all constraints
- make all errors in textgen to real errors (see ElementWise), and insert constraints that avoid them
- improve codegen for element-wise
- put make actions and functions into the same category
- do not have text as selectable
- The rationale for Initialization does not need the rationale choice (Established theory etc).
- The rationales that get adhoc rules probably do not need further explanation. When I was filling these rationales, I thought it was similar to describing the rationale topic.
- I do not think we need the rationales for Interaction and Stochasticity.
- avoid showing the rationales that are not filled
- use textgen base components in order to simplify textgen
- make dataCollection more uniform

TODO later
- create predefined UDAs shape, size, colour
- make sections of ODD collapsable

TODO for Martin
- make editor for expressions
- create user instructions and insert option list in the scheduling and the procedure editor
- ensure that the cursor does not go to titles of sections and subsections but goes to where the specification should be inputted (Made Titles nonselectable, but cursor placement is not addressed)
- ensure that when the user creates something, she needs to press ENTER and when she selects an option for an existing specification , she needs to press control and space
- fix editors (references)
- proper indent in editor (see condionalAction)
- recreate MARG and fix UI on the way
- go to new version of MPS
- use base styles consistently in editor
- adjust virtual packages for editor and other aspects to match packages in structure
- copy documentation 2019 and earlier into git: papers, reports 445, ...
- good editor for optional parts: boolean attributes - should have a text for present and another text for not present
- constraints that names cannot be the same, maybe related to INamedConcept: All primitives, global and agent variable names, and procedure names share a single global case-insensitive namespace; local names (let variables and the names of procedure inputs) may not shadow global names or each other. Identifiers may contain any Unicode letter or digit and the following ASCII characters: .?=*!<>:#+/%$_^'&-
- constraints that names cannot be the NetLogo keywords - maybe define this constraint related to INamedConcept
- localize codegen
- remove unused nameforentity editors
- introduce proper constraints for names
- typing of expressions
- remove branches from github
- move [stop] out of generation for end condition
- sort between github and tools.uia version and remove the tools.uia version
- build stand-alone
- make all generated code work
- fix selection of agent and UI generally
- fix focus (init vs. entities)
- use kernelF for expressions
