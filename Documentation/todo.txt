TODO list for development of ODD2Netlogo
- Themis: The rationales that get adhoc rules probably do not need further explanation. When I was filling these rationales, I thought it was similar to describing the rationale topic.
- check all concepts with TODO
- put actions and functions into the same category
- use range for regrow-grass (wolf sheep)
- make wolf-sheep work when eat-grass refers to environment grass
- remove name4entity (UDA) editors
- disallow changing names outside the definition
- use multiline for model description and all places where the line gets too long
- make <ctrl>-B work correctly for all kinds of concepts (also when looking at errors etc.)
- recreate wolf-sheep and fix UI on the way
- Editor should consistently say "Press enter to create new entity" for all collections
- Editor should consistently say "Press ctrl-space to select" for all selections (e.g. expression)
- manual experiments should work without adding automatic experiments
- allow "wolf" instead of "partner 1" in kill and in attribute access in interactions.
- maybe use a direct reference to UDA instead of AttributeAccess for better context menu
- fix code Voting cf. Library
- fix code Fire cf. Library
- fix code FireAgents cf. Library
- fix code Segregation cf. Library (why is occupied an interaction)
- remove boolean expressions and call them characterizations
- recreate MARG and fix UI on the way
- Improve and introduce (synthetic) characterizations (boolean).
- improve context menu for MARG for normal activities
- The rationale for Initialization does not need the rationale choice (Established theory etc).
- calculate should be done in go, not in plot
- make sections of ODD collapsable
- add random uniform stochasticity editor
- use expressions for plots, improve plot: name for plot and name for y-axis, allow colours to be defined for plot
- define function parameters as entities (not types), sort parameters of functions
- should sliders be expressions?
- allow let in conditional
- use reference for presentation item (data presentation)
- remove arrays? - not needed (move to future use)
- remove styling hintIfNull?
- styling hint versus comment? should they be selectable?
- make good stylings for sections and user input and definitions and hints and comments
- recheck all constraints
- timed condition does not need comparison operator
- improve codegen for element-wise
- do not have text as selectable
- use textgen base components in order to simplify textgen
- make dataCollection more uniform
- Categorical should refer to the category collection (enumeration).

TODO for Martin
-Action3 --> Martin
-Initial2 --> Martin
- create README for github
- build tutorial / cheat sheet how to create the Wolf-Sheep model
- make editor for expressions
- create user instructions and insert option list in the scheduling and the procedure editor
- ensure that the cursor does not go to titles of sections and subsections but goes to where the specification should be inputted (Made Titles nonselectable, but cursor placement is not addressed)
- ensure that when the user creates something, she needs to press ENTER and when she selects an option for an existing specification , she needs to press control and space
- proper indent in editor (see condionalAction)
- use base styles consistently in editor
- adjust virtual packages for editor and other aspects to match packages in structure
- copy documentation 2019 and earlier into git: papers, reports 445, ...
- good editor for optional parts: boolean attributes - should have a text for present and another text for not present
- introduce proper constraints for names
  - constraints for names: Identifiers may contain any Unicode letter or digit and the following ASCII characters: .?=*!<>:#+/%$_^'&-
  - constraints that names cannot be the NetLogo keywords - maybe define this constraint related to INamedConcept
- localize codegen
- typing of expressions
- move [stop] out of generation for end condition
- sort between github and tools.uia version and remove the tools.uia version
- fix selection of agent and UI generally
- fix focus (init vs. entities)
- make names (and other properties) showing in multiple places R/O model access. (Tried, but introduces more problems than it solves, as focus is redirected to a read-only cell)
- in editor allow sections to be folded (i.e. shown as just one line with the option to unfold)
- indent in spawn is missing - spawn should also better be called "clone"

TODO later and larger
- create predefined UDAs shape, size, colour
- use kernelF for expressions
- implement Status Arena ODD in the tool
- streamline scoping using super and ODD scopes
- make all errors in textgen to real errors (see ElementWise), and insert constraints that avoid them
- run netlogo from MPS
- Import the jetbrains.mps.lang.editor.tooltips language and insert the "tooltip" cell. This lets you specify a cell to put into the editor (perhaps an icon) and a tooltip to show, when the mouse hovers over the cell.
- show init shared attributes in the entities (for each of them)
- sort out concepts in hierarchy of EntityReference
- fix install on Mac and Linux, maybe create only a plugin? following are the steps for Mac
  1. Install OpenJDK 14 from https://jdk.java.net/14/ by extracting the .tar.gz into a folder like /usr/local (or somewhere else you can access)
  2. From the terminal, cd to /Library/Java/JavaVirtualMachines
  3. (Well, it’s only for experts, but…) ln -s /usr/local/jdk-14.0.2.jdk
  3. (I mean) sudo ln -s /usr/local/jdk-14.0.2.jdk
  4. cd /Applications/odd2netlogo\ 1.0.app/Contents
  5. edit Info.plist — on line 93, change 10* to 14*
  6. cd MacOS
  7. ./odd2netlogo
  7. It also seems to work when you click the icon
- create plugin and not standalone
- bundle file printing with release: com.mbeddr.mpsutil.uisupport
- allow comments in the code (see ACT ONE)
- make nice logos and images
