package formalodd.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Objects;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class GraphicsWindow_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("to setup");
    tgs.newLine();
    tgs.append("clear-all");
    tgs.newLine();
    if (SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de04bL, "BackGround")) != null) {
      tgs.append("ask patches[ set pcolor ");
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de04bL, "BackGround")));
      tgs.append(" ");
      tgs.append("]");
      tgs.newLine();

    }
    tgs.append("ask patches [");
    tgs.newLine();
    tgs.append("]");
    tgs.newLine();

    tgs.append("reset-ticks");
    tgs.newLine();
    tgs.append("end");
    tgs.newLine();
    tgs.append("to go");
    tgs.newLine();
    tgs.append("ask patches[");
    tgs.newLine();
    tgs.append("]");
    tgs.newLine();
    tgs.append("tick");
    tgs.newLine();
    tgs.append("end");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("GRAPHICS-WINDOW");
    tgs.newLine();
    tgs.append("210");
    tgs.newLine();
    tgs.append("10");
    tgs.newLine();
    tgs.append("647");
    tgs.newLine();
    tgs.append("448");
    tgs.newLine();
    tgs.append("-1");
    tgs.newLine();
    tgs.append("-1");
    tgs.newLine();
    if (!(Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de04eL, "PixelSize")), null))) {
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de04eL, "PixelSize")));
      tgs.newLine();
    }
    if (Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de04eL, "PixelSize")), null)) {
      tgs.append("2");
    }

    tgs.append("1");
    tgs.newLine();
    tgs.append("10");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("0");
    tgs.newLine();
    if (!(Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de052L, "WrapHorizontal")), null)) && !(Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662ded2cL, "WrapVertical")), null))) {
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de052L, "WrapHorizontal")));
      tgs.newLine();
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662ded2cL, "WrapVertical")));
      tgs.newLine();
    }
    if (Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662de052L, "WrapHorizontal")), null) || Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662ded2cL, "WrapVertical")), null)) {
      tgs.append("0");
      tgs.newLine();
      tgs.append("0");
      tgs.newLine();
    }
    tgs.append("1");
    tgs.newLine();
    if (!(Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")), null))) {
      tgs.append("-");
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")));
      tgs.newLine();
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")));
      tgs.newLine();
      tgs.append("-");
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")));
      tgs.newLine();
      tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")));
      tgs.newLine();
    }
    if (Objects.equals(SPropertyOperations.getString(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x35a03919662f32cfL, "WorldSize")), null)) {
      tgs.append("-16");
      tgs.newLine();
      tgs.append("16");
      tgs.newLine();
      tgs.append("-16");
      tgs.newLine();
      tgs.append("16");
      tgs.newLine();
    }
    tgs.append("1");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("ticks");
    tgs.newLine();
    tgs.append("30.0");
    tgs.newLine();
    tgs.newLine();
    tgs.append("BUTTON");
    tgs.newLine();
    tgs.append("9");
    tgs.newLine();
    tgs.append("12");
    tgs.newLine();
    tgs.append("72");
    tgs.newLine();
    tgs.append("45");
    tgs.newLine();
    tgs.append("setup");
    tgs.newLine();
    tgs.append("setup");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("T");
    tgs.newLine();
    tgs.append("OBSERVER");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.newLine();
    tgs.append("BUTTON");
    tgs.newLine();
    tgs.append("89");
    tgs.newLine();
    tgs.append("11");
    tgs.newLine();
    tgs.append("152");
    tgs.newLine();
    tgs.append("44");
    tgs.newLine();
    tgs.append("go");
    tgs.newLine();
    tgs.append("go");
    tgs.newLine();
    tgs.append("T");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.append("T");
    tgs.newLine();
    tgs.append("OBSERVER");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("NIL");
    tgs.newLine();
    tgs.append("1");
    tgs.newLine();
    tgs.newLine();

    for (SNode e : Sequence.fromIterable(SLinkOperations.collect(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x35a0391965add532L, 0x2045364d4552674eL, "entityReference")), MetaAdapterFactory.getReferenceLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x2045364d4552674aL, 0x2045364d45859584L, "entity")))) {
      tgs.append("create-");
      tgs.append(SPropertyOperations.getString(e, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
      tgs.append(" ");
      tgs.append(SPropertyOperations.getString(e, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
      tgs.append("slider");
      tgs.append("[");
      tgs.newLine();
      tgs.append(" set color ");
      tgs.append(SPropertyOperations.getString(e, MetaAdapterFactory.getProperty(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x354cc3720a9ec50eL, 0x35a0391965764891L, "showColors")));
      tgs.newLine();
      tgs.append(" setxy");
      tgs.append(" ");
      tgs.append("random-xcor");
      tgs.append(" ");
      tgs.append("random-ycor");
      tgs.newLine();
      if (!(Objects.equals(SLinkOperations.getTarget(e, MetaAdapterFactory.getContainmentLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x354cc3720a9ec50eL, 0x354cc3720a9ec51aL, "shape")), null))) {
        tgs.append("set shape \"");
        tgs.appendNode(SLinkOperations.getTarget(e, MetaAdapterFactory.getContainmentLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x354cc3720a9ec50eL, 0x354cc3720a9ec51aL, "shape")));
        tgs.append("\"");
        tgs.newLine();
      }
      if (!(Objects.equals(SLinkOperations.getTarget(e, MetaAdapterFactory.getContainmentLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x354cc3720a9ec50eL, 0x35a0391965971d6cL, "shapeOptions")), null))) {
        tgs.append("set size ");
        tgs.appendNode(SLinkOperations.getTarget(e, MetaAdapterFactory.getContainmentLink(0x32c6af6fc92141d7L, 0xa19e61a23bec1a47L, 0x354cc3720a9ec50eL, 0x35a0391965971d6cL, "shapeOptions")));
        tgs.newLine();
      }
      tgs.append("]");
      tgs.newLine();


    }





    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("NetLogo 6.0.4");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();
    tgs.append("@#$#@#$#@");
    tgs.newLine();


  }
}
