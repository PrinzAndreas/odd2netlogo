TODO list for development of ODD2Netlogo
- MARG: functions (calculations) and parameters for them (also for actions)
- complete MARG: Learn-about, positive-interaction, see netlogo code
- MARG: define if-then-else
- MARG: number ranges as types - no need to adjust the inc and dec
- allow affects all/any (env / entity) - code gen correct
- globals = model parameters - gen correct code
- move UDA out of general entity
- correct code generation for MARG
- remove center on patch and do it auto after move
- wolf sheep scheduling - correct code gen ref Library
- make partner in Interaction an EntityReference
- generate agent condition at call, not at proc. call is correct if parent applicable to same
- better structure for read and write other and network
- 3 scenarios for Bullying = 3 experiments, intvalue -> repetitions
- init: add init concept -> init -> experiment
- endcondition, move to simulation / experiment
- move init entity state -> entity state (editor)
- fix code Wolf Sheep, Voting, Fire, FireAgents, Segregation cf. Library
- why is occupied an interaction in segregation? fix it.
- check all concepts with TODO
- should sliders be expressions?
- create predefined UDAs shape, size, colour
- remove arrays? - not needed (move to future use)

TODO for student
2. create editor for rationale
3. differentiate between user input text and template text (font, colour, ...)
4. make boxes around the proper syntactic entities (actions, interactions)
5. make adding of interactions possible in UI
- fix editors (references)
- proper indent in editor
- use base styles consistently in editor
- copy documentation 2019 and earlier into git: papers, reports 445, ...
- good editor for optional parts: boolean attributes - should have a text for present and another text for not present
- constraints that names cannot be the same
- localize codegen
- remove unused nameforentity editors
- better editor display for increment, decrement, set
- editor input for attribute access of other
- do not allow attribute of other for actions
- introduce proper constraints for names
- typing of expressions
- remove branches from github
- build stand-alone
- make all generated code work
- fix selection of agent and UI generally
- fix focus (init vs. entities)
- use kernelF for expressions
- create code for behavioural space
